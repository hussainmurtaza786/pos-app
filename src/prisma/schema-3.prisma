model User {
  id        String    @id @default(cuid())
  email     String?   @unique
  phone     String?   @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  userRole  UserRole

  inventories Inventory[]
  orders      Order[]
  returnOrders ReturnOrder[]
  expenses     Expense[]
  products    Product[]
  ReturnOrder ReturnOrder[]
}

model Product {
  id          String  @id @default(cuid())
  sku         String  @unique
  name        String
  description String?
  price       Float

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  Inventory            Inventory[]
  ProductInOrder       ProductInOrder[]
  ProductInReturnOrder ReturnOrderProduct[]

  @@index([name])
}
model Inventory {
  id                String  @id @default(cuid())
  name        String
  description       String?
  purchasedQuantity Int
  availableQuantity Int
  purchasePrice     Int

  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String

  productId      String
  product        Product          @relation(fields: [productId], references: [id])
  ProductInOrder ProductInOrder[]
}

model Order {
  id          Int     @id @default(autoincrement())
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  // products    Product[]
  ProductInOrder ProductInOrder[]
  ReturnOrder    ReturnOrder?
}

model ProductInOrder {
  orderId       Int
  productId     String
  inventoryId   String?
  returnOrderId Int?
  quantity      Int
  sellPrice     Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  order     Order      @relation(fields: [orderId], references: [id])
  product   Product    @relation(fields: [productId], references: [id])
  inventory Inventory? @relation(fields: [inventoryId], references: [id])

  @@id([orderId, productId])
}

model ReturnOrder {
  orderId     Int     @id
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  order Order @relation(fields: [orderId], references: [id])

  ProductInReturnOrder ReturnOrderProduct[]
}

model ReturnOrderProduct {
  orderId       Int
  productId     String
  inventoryId   String?
  returnOrderId Int?
  quantity      Int
  sellPrice     Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  product     Product      @relation(fields: [productId], references: [id])
  ReturnOrder ReturnOrder? @relation(fields: [returnOrderId], references: [orderId])

  @@id([orderId, productId])
}

model Expense {
  id          String     @id @default(uuid())
  title       String
  amount      Float
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt

  user        User       @relation(fields: [userId], references: [id])
  userId      String
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique

  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  products    Product[]
}
////////////////////// Enums //////////////////////
enum UserRole {
  Admin
  Staff
}